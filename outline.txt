
Introduction

Why?
  Brief kube intro
    containers are awesome
    containers in prod = you need multi-node orchestration
    kubernetes is great for this
  VMs-in-containers vs Containers-in-VMs
  large VM-based infrastructures, dev workflows
    not going away overnight
  VMs vs. containers
    VMs: more secure, HW assistance, resource pegging
    Containers: faster, smaller, but shared
    The security issue, particularly
      "picket fencing"
    Also resources, DB example
  The two basic use cases
    migration vs. security

KubeVirt
  Why?
    Transition to Kubernetes from VM infra stepwise.
    Use Kube to manage legacy VM apps
      Some of which require non-Linux OS,
      or specific Virt HW config
    KubeVirt basic anatomy
      Custom Resource Definitions
      virt-controller
      virt-handler
      virt-launcher
        libvirtd
      storage
      networking
      KubeVirt VM lifecycle
    Demo

Kata Containers
  Why?
    Container workflow with VM security
    General arch to do this
  Clear Containers vs. Kata
  Demo
    of CC
  What will change in Kata

Conclusion
  contact us
  demo materials
